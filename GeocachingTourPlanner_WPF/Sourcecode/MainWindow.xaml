<Window x:Class="GeocachingTourPlanner.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GeocachingTourPlanner"
        xmlns:Mapsui="clr-namespace:Mapsui.UI.Wpf;assembly=Mapsui.UI.Wpf"
        mc:Ignorable="d"
        Title="MainWindow" WindowState="Maximized">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Color x:Key="ButtonBackgound">#FFDDE8CE</Color>
        <Style x:Key="StandardButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ButtonBackgound}"/>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Color x:Key="StandardBackgroundColor">#FFE8DBC8</Color>
        <Style x:Key="StandardExpander" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <DockPanel.Background>
                                    <SolidColorBrush Color="{DynamicResource StandardBackgroundColor}"/>
                                </DockPanel.Background>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="StandardTabControl" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <Border.Background>
                                    <ImageBrush/>
                                </Border.Background>
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Expander Grid.Column="0" x:Name="SettingsExpander" Margin="0" VerticalAlignment="Stretch" IsExpanded="False" ExpandDirection="Right" Style="{DynamicResource StandardExpander}">
                <Expander.Header>
                    <TextBlock Text="Settings" RenderTransformOrigin="0,0">
                        <TextBlock.LayoutTransform>
                            <TransformGroup>
                                <RotateTransform CenterX="25" CenterY="25" Angle="90" />
                            </TransformGroup>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>
                <TabControl  Width="300" Style="{DynamicResource StandardTabControl}">
                    <TabItem x:Name="Overview" Header="Overview">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock x:Name="GeocachesStateLabel" Grid.Column="0" Grid.Row="0" VerticalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center">0 Geocaches loaded</TextBlock>
                            <TextBlock Grid.Column="0" Grid.Row="1">           
                                <Hyperlink NavigateUri="https://www.geocaching.com/pocket/" RequestNavigate="OpenInBrowser">
                                    Get Pocket Query
                                </Hyperlink>
                            </TextBlock>
                            <Button Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Click="setGeocachedatabaseButton_Click" Style="{DynamicResource StandardButton}">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                                    Set Geocache Database
                                </TextBlock>
                            </Button>
                            <Button Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Click="ImportGeocachesButton_Click" Style="{DynamicResource StandardButton}">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                                    Import Pocket Query
                                </TextBlock>
                            </Button>

                            <TextBlock x:Name="RatingprofilesStateLabel" Grid.Column="0" Grid.Row="2" TextWrapping="Wrap" TextAlignment="Center">0 Ratingprofiles loaded</TextBlock>
                            <Button Grid.Column="1" Grid.Row="2" Click="setRatingprofiledatabaseButton_Click" Style="{DynamicResource StandardButton}">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                                    Set Ratingprofile Database
                                </TextBlock>
                            </Button>
                            <Button Grid.Column="2" Grid.Row="2" Click="NewRatingprofileDatabaseButton_Click" Style="{DynamicResource StandardButton}">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                                    New, empty Database
                                </TextBlock>
                            </Button>

                            <TextBlock x:Name="RoutingprofilesStateLabel" Grid.Column="0" Grid.Row="3" TextWrapping="Wrap" TextAlignment="Center">0 Routingprofiles loaded</TextBlock>
                            <Button Grid.Column="1" Grid.Row="3" Click="setRoutingprofiledatabaseButton_Click" Style="{DynamicResource StandardButton}">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                                    Set Routingprofile Database
                                </TextBlock>
                            </Button>
                            <Button Grid.Column="2" Grid.Row="3" Click="NewRoutingprofilesDatabaseButton_Click" Style="{DynamicResource StandardButton}">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                                    New, empty Database
                                </TextBlock>
                            </Button>

                            <TextBlock x:Name="RouterDBStateLabel" Grid.Column="0" Grid.Row="4" TextWrapping="Wrap" TextAlignment="Center">No RouterDB loaded</TextBlock>
                            <TextBlock Grid.Column="0" Grid.Row="5">           
                                <Hyperlink NavigateUri="http://download.geofabrik.de/" RequestNavigate="OpenInBrowser">
                                    Get .pbf File
                                </Hyperlink>
                            </TextBlock>
                            <Button Grid.Column="1" Grid.Row="4" Grid.RowSpan="2" Click="setRouterDBButton_Click" Style="{DynamicResource StandardButton}">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                                    Set RouterDB
                                </TextBlock>
                            </Button>
                            <Button Grid.Column="2" Grid.Row="4" Grid.RowSpan="2" Click="ImportOSMDataButton_Click" Style="{DynamicResource StandardButton}">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                                    Import .pbf File
                                </TextBlock>
                            </Button>
                            <Button Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="3" Click="OpenWikiButton_Click" Style="{DynamicResource StandardButton}">
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                                    Open wiki in Browser
                                </TextBlock>
                            </Button>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="Ratingprofiles" Header="Ratingprofiles">
                        <Grid x:Name="RatingprofilesSettingsGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0">Ratingprofile description</TextBlock>
                                    <DockPanel Grid.Row="1">
                                        <TextBlock DockPanel.Dock="Left">Select Ratingprofile</TextBlock>
                                        <ComboBox x:Name="EditRatingprofileCombobox" DockPanel.Dock="Right" SelectionChanged="Ratingprofile_SelectionChanged"></ComboBox>
                                    </DockPanel>
                                    <GroupBox Grid.Row="3" Header="Type">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0">Priority</TextBlock>
                                            <TextBox x:Name="TypePriorityValue" Grid.Column="1" Grid.Row="0"/>
                                            <TextBlock Grid.Column="0" Grid.Row="1">Traditional</TextBlock>
                                            <TextBox x:Name="TraditionalValue" Grid.Column="1" Grid.Row="1"/>
                                            <TextBlock Grid.Column="0" Grid.Row="2">Multi</TextBlock>
                                            <TextBox x:Name="MultiValue" Grid.Column="1" Grid.Row="2"/>
                                            <TextBlock Grid.Column="0" Grid.Row="3">Mystery</TextBlock>
                                            <TextBox x:Name="MysteryValue" Grid.Column="1" Grid.Row="3"/>
                                            <TextBlock Grid.Column="2" Grid.Row="1">Earthcache</TextBlock>
                                            <TextBox x:Name="EarthcacheValue" Grid.Column="3" Grid.Row="1"/>
                                            <TextBlock Grid.Column="2" Grid.Row="2">Virtual</TextBlock>
                                            <TextBox x:Name="VirtualValue" Grid.Column="3" Grid.Row="2"/>
                                            <TextBlock Grid.Column="2" Grid.Row="3">Webcam</TextBlock>
                                            <TextBox x:Name="WebcamValue" Grid.Column="3" Grid.Row="3"/>
                                            <TextBlock Grid.Column="4" Grid.Row="1">Letterbox</TextBlock>
                                            <TextBox x:Name="LetterboxValue" Grid.Column="5" Grid.Row="1"/>
                                            <TextBlock Grid.Column="4" Grid.Row="2">Wherigo</TextBlock>
                                            <TextBox x:Name="WherigoValue" Grid.Column="5" Grid.Row="2"/>
                                            <TextBlock Grid.Column="4" Grid.Row="3">Other</TextBlock>
                                            <TextBox x:Name="OtherTypeValue" Grid.Column="5" Grid.Row="3"/>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="4" Header="Size">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0">Priority</TextBlock>
                                            <TextBox x:Name="SizePriorityValue" Grid.Column="1" Grid.Row="0"/>
                                            <TextBlock Grid.Column="0" Grid.Row="1">Large</TextBlock>
                                            <TextBox x:Name="LargeValue" Grid.Column="1" Grid.Row="1"/>
                                            <TextBlock Grid.Column="0" Grid.Row="2">Regular</TextBlock>
                                            <TextBox x:Name="RegularValue" Grid.Column="1" Grid.Row="2"/>
                                            <TextBlock Grid.Column="2" Grid.Row="1">Small</TextBlock>
                                            <TextBox x:Name="SmallValue" Grid.Column="3" Grid.Row="1"/>
                                            <TextBlock Grid.Column="2" Grid.Row="2">Micro</TextBlock>
                                            <TextBox x:Name="MicroValue" Grid.Column="3" Grid.Row="2"/>
                                            <TextBlock Grid.Column="4" Grid.Row="1">Other</TextBlock>
                                            <TextBox x:Name="OtherSizeValue" Grid.Column="5" Grid.Row="1"/>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="5" Header="Difficulty">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0">Priority</TextBlock>
                                            <TextBox x:Name="DPriorityValue" Grid.Column="1" Grid.Row="0"/>
                                            <TextBlock Grid.Column="2" Grid.Row="0">D5</TextBlock>
                                            <TextBox x:Name="D5Value" Grid.Column="3" Grid.Row="0"/>
                                            <TextBlock Grid.Column="2" Grid.Row="1">D4.5</TextBlock>
                                            <TextBox x:Name="D45Value" Grid.Column="3" Grid.Row="1"/>
                                            <TextBlock Grid.Column="2" Grid.Row="2">D4</TextBlock>
                                            <TextBox x:Name="D4Value" Grid.Column="3" Grid.Row="2"/>
                                            <TextBlock Grid.Column="4" Grid.Row="0">D3.5</TextBlock>
                                            <TextBox x:Name="D35Value" Grid.Column="5" Grid.Row="0"/>
                                            <TextBlock Grid.Column="4" Grid.Row="1">D3</TextBlock>
                                            <TextBox x:Name="D3Value" Grid.Column="5" Grid.Row="1"/>
                                            <TextBlock Grid.Column="4" Grid.Row="2">D2.5</TextBlock>
                                            <TextBox x:Name="D25Value" Grid.Column="5" Grid.Row="2"/>
                                            <TextBlock Grid.Column="6" Grid.Row="0">D2</TextBlock>
                                            <TextBox x:Name="D2Value" Grid.Column="7" Grid.Row="0"/>
                                            <TextBlock Grid.Column="6" Grid.Row="1">D1.5</TextBlock>
                                            <TextBox x:Name="D15Value" Grid.Column="7" Grid.Row="1"/>
                                            <TextBlock Grid.Column="6" Grid.Row="2">D1</TextBlock>
                                            <TextBox x:Name="D1Value" Grid.Column="7" Grid.Row="2"/>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="6" Header="Terrain">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0">Priority</TextBlock>
                                            <TextBox x:Name="TPriorityValue" Grid.Column="1" Grid.Row="0"/>
                                            <TextBlock Grid.Column="2" Grid.Row="0">T5</TextBlock>
                                            <TextBox x:Name="T5Value" Grid.Column="3" Grid.Row="0"/>
                                            <TextBlock Grid.Column="2" Grid.Row="1">T4.5</TextBlock>
                                            <TextBox x:Name="T45Value" Grid.Column="3" Grid.Row="1"/>
                                            <TextBlock Grid.Column="2" Grid.Row="2">T4</TextBlock>
                                            <TextBox x:Name="T4Value" Grid.Column="3" Grid.Row="2"/>
                                            <TextBlock Grid.Column="4" Grid.Row="0">T3.5</TextBlock>
                                            <TextBox x:Name="T35Value" Grid.Column="5" Grid.Row="0"/>
                                            <TextBlock Grid.Column="4" Grid.Row="1">T3</TextBlock>
                                            <TextBox x:Name="T3Value" Grid.Column="5" Grid.Row="1"/>
                                            <TextBlock Grid.Column="4" Grid.Row="2">T2.5</TextBlock>
                                            <TextBox x:Name="T25Value" Grid.Column="5" Grid.Row="2"/>
                                            <TextBlock Grid.Column="6" Grid.Row="0">T2</TextBlock>
                                            <TextBox x:Name="T2Value" Grid.Column="7" Grid.Row="0"/>
                                            <TextBlock Grid.Column="6" Grid.Row="1">T1.5</TextBlock>
                                            <TextBox x:Name="T15Value" Grid.Column="7" Grid.Row="1"/>
                                            <TextBlock Grid.Column="6" Grid.Row="2">T1</TextBlock>
                                            <TextBox x:Name="T1Value" Grid.Column="7" Grid.Row="2"/>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="7" Header="Age">
                                        <DockPanel LastChildFill="False">
                                            <ComboBox x:Name="AgeValue" DockPanel.Dock="Left" Width="Auto" HorizontalAlignment="Stretch">
                                                <ComboBoxItem>Multiply with</ComboBoxItem>
                                                <ComboBoxItem>Square and divide by</ComboBoxItem>
                                            </ComboBox>
                                            <TextBox x:Name="AgeFactorValue" DockPanel.Dock="Right" Width="Auto" MinWidth="40"/>
                                        </DockPanel>
                                    </GroupBox>
                                    <GroupBox Grid.Row="8" Header="Other">
                                        <DockPanel LastChildFill="False">
                                            <TextBlock DockPanel.Dock="Left">Penalty for Needs Maintenance</TextBlock>
                                            <TextBox x:Name="NMFlagValue" DockPanel.Dock="Right" Width="Auto" MinWidth="40"></TextBox>
                                        </DockPanel>
                                    </GroupBox>
                                </Grid>
                            </ScrollViewer>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0">Save as</TextBlock>
                                <TextBox Grid.Column="1" x:Name="RatingprofileName" HorizontalAlignment="Stretch"/>
                                <Menu Grid.Column="2">
                                    <MenuItem Header="Save + Apply" Click="RatingprofileSaveApply_Click"/>
                                    <MenuItem Header="•••">
                                        <MenuItem Header="_Save only" Click="RatingprofileSaveOnly_Click"/>
                                        <MenuItem Header="_Delete" Click="DeleteRatingprofileButton_Click"/>
                                    </MenuItem>
                                </Menu>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="Routingprofiles" Header="Routingprofiles">
                        <Grid  x:Name="RoutingprofilesSettingsGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0">Routingprofile description</TextBlock>
                                    <DockPanel Grid.Row="1">
                                        <TextBlock DockPanel.Dock="Left">Select Routingprofile</TextBlock>
                                        <ComboBox x:Name="EditRoutingprofileCombobox" DockPanel.Dock="Right" SelectionChanged="Routingprofile_SelectionChanged"></ComboBox>
                                    </DockPanel>
                                    <GroupBox Grid.Row="3" Header="RoutingCore">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0">Vehicle</TextBlock>
                                            <ComboBox x:Name="VehicleValue" Grid.Column="1" Grid.Row="0">
                                                <ComboBoxItem>Car</ComboBoxItem>
                                                <ComboBoxItem>Bicycle</ComboBoxItem>
                                                <ComboBoxItem>Pedestrian</ComboBoxItem>
                                            </ComboBox>
                                            <TextBlock Grid.Column="2" Grid.Row="1">Metric</TextBlock>
                                            <ComboBox x:Name="MetricValue" Grid.Column="3" Grid.Row="1">
                                                <ComboBoxItem>Shortest</ComboBoxItem>
                                                <ComboBoxItem>Fastest</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="4" Header="Limits">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0">Max Distance</TextBlock>
                                            <TextBox x:Name="DistanceValue" Grid.Column="1" Grid.Row="0"/>
                                            <TextBlock Grid.Column="2" Grid.Row="0">Max Time</TextBlock>
                                            <TextBox x:Name="TimeValue" Grid.Column="3" Grid.Row="0"/>
                                            <TextBlock Grid.Column="0" Grid.Row="1">Time per geocache</TextBlock>
                                            <TextBox x:Name="GeocacheTimeValue" Grid.Column="1" Grid.Row="1"/>
                                        </Grid>
                                    </GroupBox>
                                </Grid>
                            </ScrollViewer>
                            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0">Save as</TextBlock>
                                <TextBox Grid.Column="1" x:Name="RoutingprofileName" HorizontalAlignment="Stretch"/>
                                <Menu Grid.Column="2">
                                    <MenuItem Header="Save + recalculate Route" Click="RoutingprofilesSaveRecaculate_Click"/>
                                    <MenuItem Header="•••">
                                        <MenuItem Header="_Save only" Click="RoutingprofilesSaveOnly_Click"/>
                                        <MenuItem Header="_Delete" Click="DeleteRoutingprofileButton_Click"/>
                                    </MenuItem>
                                </Menu>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="Settings" Header="Settings">
                        <StackPanel>
                            <GroupBox Header="Routing Settings">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="LiveDisplayRouteCalculationValue" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Checked="LiveDisplayRouteCalculationCheckbox_Checked" Unchecked="LiveDisplayRouteCalculationCheckbox_Unchecked">Live Display of route Calculation</CheckBox>
                                    <TextBlock Grid.Column="0" Grid.Row="1" TextWrapping="Wrap">Number of basic routes to compare in automatic selection of target geocaches (Default 4)</TextBlock>
                                    <TextBox x:Name="RouteFindingWidthValue" Grid.Column="1" Grid.Row="1" MinWidth="40" TextChanged="RoutefindingWidth_Textbox_TextChanged"></TextBox>
                                    <TextBox Grid.Column="0" Grid.Row="2" TextWrapping="Wrap">What percentage of the maximal distance should be used up at most in the automatic selection of target geocaches</TextBox>
                                    <TextBox x:Name="AutotargetselectionMaxValue" Grid.Column="1" Grid.Row="2" MinWidth="40" TextChanged="AutotargetselectionMaxTextbox_TextChanged" LostFocus="AutotargetselectionMaxTextBox_Leave"></TextBox>
                                    <TextBox Grid.Column="0" Grid.Row="3" TextWrapping="Wrap">What percentage of the maximal distance should be used up at least in the automatic selection of target geocaches</TextBox>
                                    <TextBox x:Name="AutotargetselectionMinValue" Grid.Column="1" Grid.Row="3" MinWidth="40" TextChanged="AutotargetselectionMinTextBox_TextChanged" LostFocus="AutotargetselectionMinTextBox_Leave"></TextBox>
                                </Grid>
                            </GroupBox>
                            <GroupBox Header="Map">
                                <StackPanel>
                                    <TextBlock>Size of icons on the map</TextBlock>
                                    <Slider x:Name="MarkerSizeValue" Minimum="10" Maximum="64" TickFrequency="1" IsSnapToTickEnabled="True" ValueChanged="MarkerSizeValue_Changed"/>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </Expander>
            <Mapsui:MapControl x:Name="mapControl" Grid.Column="1" MouseRightButtonUp="mapControl_MouseRightButtonUp"/>
            <Canvas x:Name="TooltipCanvas" Grid.Column="1" Width="Auto" Visibility="Visible">
                <Border x:Name="TooltipBorder" BorderBrush="Black" BorderThickness="1" CornerRadius="5" Background="LightGray" Opacity=".75">
                    <TextBlock x:Name="TooltipText" Margin="5" FontWeight="Bold" TextWrapping="Wrap"/>
                </Border>
                <StackPanel x:Name="CustomMenuStackpanel" Background="LightGray">
                    <MenuItem x:Name="ToBeginning"/>
                    <MenuItem x:Name="ToEnd"/>
                    <MenuItem x:Name="Remove" Visibility="Collapsed"/>
                </StackPanel>
            </Canvas>
            <Expander Grid.Column="2" x:Name="Routes" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" IsExpanded="False" ExpandDirection="Left">
                <Expander.Header>
                    <TextBlock Text="Routes" RenderTransformOrigin="0,0">
                        <TextBlock.LayoutTransform>
                            <TransformGroup>
                                <RotateTransform CenterX="25" CenterY="25" Angle="-90" />
                            </TransformGroup>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <!-- Box with info and route selection-->
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <!-- Box Scrollable view for items on route-->
                        <RowDefinition Height="*"/>
                        <!-- Box menu to delete, export and calculate-->
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ComboBox x:Name="SelectRoute_Combobox" Grid.Row="0" Grid.Column="0"/>
                    <Button Grid.Column="1" Click="NewButton_Click">New...</Button>
                    <TextBlock x:Name="RouteInfo" Grid.Row="1" Grid.ColumnSpan="2">Info Text comes here</TextBlock>
                    <ComboBox x:Name="SelectRoutingprofileCombobox" Grid.Row="2" Grid.ColumnSpan="2"/>
                    <ScrollViewer Grid.Row="3" Grid.ColumnSpan="2">
                        <StackPanel x:Name="WaypointStackpanel"/>
                    </ScrollViewer>
                    <Menu Grid.Row="4" Grid.ColumnSpan="2">
                        <MenuItem Header="Calculate...">
                            <MenuItem Header="Add Geocaches directly on route" Click="CalculateDirectRoute_Click"/>
                            <MenuItem Header="Add Geocaches directly on route"/>
                            <MenuItem Header="Add Geocaches close to route"/>
                            <MenuItem Header="Find best geocaches to route"/>
                        </MenuItem>
                        <MenuItem Header="Export"/>
                        <MenuItem Header="Delete"/>
                    </Menu>
                </Grid>
            </Expander>
        </Grid>
        <DockPanel Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" LastChildFill="False">
            <TextBlock x:Name="StatusLabel" DockPanel.Dock="Left" VerticalAlignment="Bottom">Unknown Status</TextBlock>
            <ProgressBar x:Name="StatusProgressBar"  DockPanel.Dock="Left" VerticalAlignment="Stretch" Width="100"/>
        </DockPanel>
    </Grid>
</Window>
